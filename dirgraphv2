#!/bin/sh
POSIXLY_CORRECT=yes

print_size()
{
    hash_count=$1
    while [ "$hash_count" -gt 0 ]
    do
        printf "#"
        hash_count="$((hash_count-1))"
    done
}
while getopts :i:n arg
do 
    case "$arg" in
        i)
        REGEX_PATTERN=$OPTARG
        ;;
        n)
        normalize=1
        ;;
        *)
        echo "invalid args" >&2
        exit 1
    esac 
done
#remove processed args
OPTIND="$((OPTIND-1))"
shift $OPTIND
#default root dir
DIR=$(pwd)
#check remaining args (should be directory name)
if [ $# -eq 1 ];
then
    DIR="$1" #set root dir as arg
    if [ ! -d "$DIR" ];
    then
        echo "Non existing directory">&2
        exit 1
    fi
elif [ $# -ge 1 ];
then
    echo "invalid args">&2  
    exit 1
fi


#REGEX from user cant match root dir 
if [ "$REGEX_PATTERN" ];
then
    if echo "$DIR" | grep -Eq "$REGEX_PATTERN";
    then
        echo "FILE_ERE regular expression must not match root directory" >&2
        exit 1
    fi
fi
#variables init
filecount=0
dircount=0
L100B=0
L1KiB=0
L10KiB=0
L100KiB=0
L1MiB=0
L10MiB=0
L100MiB=0
L1GiB=0
GE1GiB=0
#loop over files and dirs


if [ "$REGEX_PATTERN" ]; then
    filecount=$(find "$DIR" -type f 2>/dev/null | grep -Ev $REGEX_PATTERN | wc -l)
    dircount=$(find "$DIR" -type d 2>/dev/null| grep -Ev $REGEX_PATTERN | wc -l)
    L100B=$(find "$DIR" -type f -size -100c 2>/dev/null| grep -Ev $REGEX_PATTERN | wc -l)
    L1KiB=$(find "$DIR" -type f -size +100c -size -1024c 2>/dev/null|grep -Ev $REGEX_PATTERN| wc -l)
    L10KiB=$(find "$DIR" -type f -size +1024c -size -10240c 2>/dev/null|grep -Ev $REGEX_PATTERN| wc -l)
    L100KiB=$(find "$DIR" -type f -size +12400c -size -124000c 2>/dev/null|grep -Ev $REGEX_PATTERN| wc -l)
    L1MiB=$(find "$DIR" -type f -size +124000c -size -1048576c 2>/dev/null|grep -Ev $REGEX_PATTERN| wc -l)
    L10MiB=$(find "$DIR" -type f -size +1048576c -size -10485760c 2>/dev/null|grep -Ev $REGEX_PATTERN| wc -l)
    L100MiB=$(find "$DIR" -type f -size +10485760c -size -104857600c 2>/dev/null|grep -Ev $REGEX_PATTERN| wc -l)
    L1GiB=$(find "$DIR" -type f -size +104857600c -size -1073741824c 2>/dev/null|grep -Ev $REGEX_PATTERN| wc -l)
    GE1GiB=$(find "$DIR" -type f -size +1073741824c 2>/dev/null|grep -Ev $REGEX_PATTERN| wc -l)
else
    filecount=$(find "$DIR" -type f 2>/dev/null|wc -l)
    dircount=$(find "$DIR" -type d 2>/dev/null |wc -l)
    L100B=$(find "$DIR" -type f -size -100c 2>/dev/null| wc -l)
    L1KiB=$(find "$DIR" -type f -size +100c -size -1024c 2>/dev/null | wc -l)
    L10KiB=$(find "$DIR" -type f -size +1024c -size -10240c 2>/dev/null| wc -l)
    L100KiB=$(find "$DIR" -type f -size +12400c -size -124000c 2>/dev/null| wc -l)
    L1MiB=$(find "$DIR" -type f -size +124000c -size -1048576c 2>/dev/null| wc -l)
    L10MiB=$(find "$DIR" -type f -size +1048576c -size -10485760c 2>/dev/null| wc -l)
    L100MiB=$(find "$DIR" -type f -size +10485760c -size -104857600c 2>/dev/null| wc -l)
    L1GiB=$(find "$DIR" -type f -size +104857600c -size -1073741824c 2>/dev/null| wc -l)
    GE1GiB=$(find "$DIR" -type f -size +1073741824c 2>/dev/null| wc -l)
fi

if [ "$normalize" = "1" ]; then
    if [ -t 0 ]; then
        max="$(tput cols)"
        max=$((max-12-1)) ##line maxlenght-1-category print length
    else
        max=79
    fi
    #most occured size of file
    maxfile="$L100B"
    if [ $L1KiB -gt $maxfile ]; then maxfile=$L1KiB ;fi
    if [ $L10KiB -gt $maxfile ]; then maxfile=$L10KiB;fi 
    if [ $L100KiB -gt $maxfile ]; then maxfile=$L100KiB;fi
    if [ $L1MiB -gt $maxfile ]; then maxfile=$L1MiB;fi
    if [ $L10MiB -gt $maxfile ]; then maxfile=$L10MiB;fi
    if [ $L100MiB -gt $maxfile ]; then maxfile=$L100MiB;fi
    if [ $L1GiB -gt $maxfile ]; then maxfile=$L1GiB;fi
    if [ $GE1GiB -gt $maxfile ]; then maxfile=$GE1GiB;fi
    #max hashed doesnt fit line - normalize
    if [ $maxfile -gt $max ]; then
        rate=$(echo "$maxfile/$max" | bc -l)
        L100B=$(echo "(($L100B+$rate-1)/$rate)" | bc)
        L1KiB=$(echo "(($L1KiB+$rate-1)/$rate)" | bc)
        L10KiB=$(echo "(($L10KiB+$rate-1)/$rate)" | bc)
        L100KiB=$(echo "(($L100KiB+$rate-1)/$rate)" | bc)
        L1MiB=$(echo "(($L1MiB+$rate-1)/$rate)" | bc)
        L10MiB=$(echo "(($L10MiB+$rate-1)/$rate)" | bc)
        L100MiB=$(echo "(($L100MiB+$rate-1)/$rate)" | bc)
        L1GiB=$(echo "(($L1GiB+$rate-1)/$rate)" | bc)
        GE1GiB=$(echo "(($GE1GiB+$rate-1)/$rate)" | bc)   
    fi
    
fi
echo "Root directory: $DIR"
echo "Directories: $dircount"
echo "All files: $filecount"
echo "File size histogram:"
printf "  <100 B  : ";print_size "$L100B" ; printf "\\n"
printf "  <1 KiB  : ";print_size "$L1KiB" ; printf "\\n"
printf "  <10 KiB : ";print_size "$L10KiB" ; printf "\\n"
printf "  <100 KiB: ";print_size "$L100KiB" ; printf "\\n"
printf "  <1 MiB  : ";print_size "$L1MiB" ; printf "\\n"
printf "  <10 MiB : ";print_size "$L10MiB" ; printf "\\n"
printf "  <100 MiB: ";print_size "$L100MiB" ; printf "\\n"
printf "  <1 GiB  : ";print_size "$L1GiB" ; printf "\\n"
printf "  >=1 GiB : ";print_size "$GE1GiB" ; printf "\\n"




